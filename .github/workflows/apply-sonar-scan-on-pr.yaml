
  name: Comment on PR

  on:
    workflow_dispatch:
      inputs:
        comment:
          description: 'The comment text to post'
          required: true
          type: string
        repo:
          description: 'Repository in "owner/repo" format (e.g., port-labs/puddle-integrations)'
          required: true
          type: string
        pr:
          description: 'Pull request number'
          required: true
          type: string

  jobs:
    comment:
      runs-on: ubuntu-latest
      steps:
        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.x'

        - name: Install Python dependencies
          run: |
            pip install PyJWT requests cryptography

        - name: Comment on PR using GitHub App
          env:
            PEM: ${{ secrets.PORT_GITHUB_APP_PEM }}
            APP_ID: ${{ secrets.PORT_GITHUB_APP_ID }}
            INSTALLATION_ID: ${{ secrets.PORT_GITHUB_APP_INSTALLATION_ID }}
            COMMENT: ${{ github.event.inputs.comment }}
            REPO: ${{ github.event.inputs.repo }}
            PR_NUMBER: ${{ github.event.inputs.pr }}
          run: |
            python - <<'EOF'
            import os, time, jwt, requests

            # Load environment variables
            pem = os.environ['PEM']
            app_id = os.environ['APP_ID']
            installation_id = os.environ['INSTALLATION_ID']
            comment = os.environ['COMMENT']
            repo = os.environ['REPO']
            pr_number = os.environ['PR_NUMBER']

            # Generate JWT (valid for 10 minutes)
            now = int(time.time())
            payload = {
                'iat': now - 60,
                'exp': now + (10 * 60),
                'iss': app_id
            }
            jwt_token = jwt.encode(payload, pem, algorithm='RS256')

            # Obtain an installation access token
            headers = {
                'Authorization': f'Bearer {jwt_token}',
                'Accept': 'application/vnd.github+json'
            }
            token_url = f"https://api.github.com/app/installations/{installation_id}/access_tokens"
            resp = requests.post(token_url, headers=headers)
            resp.raise_for_status()
            token = resp.json()['token']

              # Comment on the pull request (PRs are issues in GitHub API)
              owner, repo_name = repo.split('/')
              comment_url = f"https://api.github.com/repos/{owner}/{repo_name}/issues/{pr_number}/comments"
              comment_payload = {"body": comment}
              headers = {
                  'Authorization': f'Bearer {token}',
                  'Accept': 'application/vnd.github.v3+json',
                  'Content-Type': 'application/json'
              }
              resp = requests.post(comment_url, headers=headers, json=comment_payload)
              resp.raise_for_status()
              print("Comment posted successfully!")
              EOF
