name: Terraform Plan
on:
  workflow_dispatch:
    inputs:
      bucket_name:
        type: string
      port_payload:
        required: true
        description: Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
        type: string
jobs:
  provision-bucket:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Log starting of s3 bucket creation 
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
              About to create an s3 bucket with name: ${{ github.event.inputs.bucket_name }} .. ⛴️

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-session-token: '${{ secrets.AWS_SESSION_TOKEN }}'
          aws-region: '${{ secrets.AWS_REGION }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
          
      - name: Terraform Plan
        id:   plan
        env:
          TF_VAR_bucket_name:  "${{ github.event.inputs.bucket_name }}"
          TF_VAR_aws_region: "${{ secrets.AWS_REGION }}"
        run: |
          cd app
          terraform init
          terraform validate
          terraform plan \
            -input=false \
            -out=tfport-${{fromJson(inputs.port_payload).context.runId}}.tfplan
          terraform show -no-color tfport-${{fromJson(inputs.port_payload).context.runId}}.tfplan

      - name: Save Plan Artifact
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: tfport-${{fromJson(inputs.port_payload).context.runId}}
          path: tfport-${{fromJson(inputs.port_payload).context.runId}}.tfplan
          retention-days: 7
          
      - name: Output artifact ID
        run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
      
      - name: Update Port on status of planning terraform resource
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
              s3 bucket planned successfully and now requesting approval to apply the plan ${{ steps.plan.outputs.stdout }} ✅

      - name: Request approval to apply terraform resource 
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: CREATE_RUN
          icon: GithubActions
          blueprint: service
          action: terraform_apply
          properties: |-
            {
              "run_identifier": "${{ fromJson(inputs.port_payload).context.runId }}"
            }
    
      - name: Log message to update Port on the status of the TF Apply request
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          operation: PATCH_RUN
          runId: ${{ fromJson(inputs.port_payload).context.runId }}
          logMessage: |
              The request to provision and apply the terraform resource has been sent to the approval team. The status of request will be shared in the action log
